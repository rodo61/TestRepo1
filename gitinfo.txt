The three states
================

committed
	safely stored in local database
	-> git directory (repository)

modified
	changed but not committed to the database yet
	-> working directory

staged
	marked a modified file in its current version 
	to go into your next commit snapshot
	-> staging area



When I add a file it will be shown under
# Untracked files:

When I add or modify a file it's still in the working directory. It will not be commited when the next commit command is run.

If I want the new or modified file to be part of the next snapshot/commit then I have to add it to the staging area. This is done by 'git add filename'. It then will apear under
# Changes to be committed:




Configuration
=============
$ git config
$ git config -l
$ git config --global user.name "John Doe"


Help
====
$ git help


Initializing a Repository in an Existing Directory
==================================================
$ git init


Add tracking for existing files
===============================
$ git add *.c


Stage files
===========
$ git add *.c


Unstage files
=============
$ git reset HEAD filename


Commit
======
$ git commit -m 'initial project version'


Clone a repository
==================
the new directory will be created as a subdirectory of the current working directory

$ git clone git://github.com/jquery/jquery-mobile.git jqmgit


Checking the Status of Your Files
=================================
$ git status


Tracking New Files
==================
$ git add filename


Compare
=======

1. working directory with stage
$ git diff

2. stage with last commit
$ git diff --staged or
$ git diff --cached


Commit
======
$ git commit
$ git commit "new commit"





